{"ast":null,"code":"var _jsxFileName = \"/home/artur/Documents/javaee/app/src/Login.js\";\nimport React, { Component } from 'react';\nimport { Button, FormGroup, FormControl } from 'react-bootstrap';\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleSubmit = (event, {\n      history\n    }) => {\n      this.state.data.map(function (user) {\n        if (user.nick === this.state.nickname && user.password === this.state.password) history.push('/student');\n      });\n    };\n\n    this.state = {\n      data: [],\n      nickname: \"\",\n      password: \"\"\n    };\n    this.validateForm = this.validateForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    return this.state.nickname.length > 0 && this.state.password.length > 0;\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/api/users').then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Nickname\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.nickname,\n      onChange: text => this.setState({\n        nickname: text\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Button, {\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      on: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}","map":{"version":3,"sources":["/home/artur/Documents/javaee/app/src/Login.js"],"names":["React","Component","Button","FormGroup","FormControl","Login","constructor","props","handleChange","event","setState","target","id","value","handleSubmit","history","state","data","map","user","nick","nickname","password","push","validateForm","bind","length","componentDidMount","fetch","then","response","json","console","log","render","text"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, FormGroup, FormControl} from 'react-bootstrap';\n\nexport default class Login extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            nickname: \"\",\n            password: \"\"\n        };\n\n        this.validateForm = this.validateForm.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    validateForm() {\n        return this.state.nickname.length > 0 && this.state.password.length > 0;\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    }\n\n    handleSubmit = (event, {history}) => {\n        this.state.data.map( function (user ) {\n            if (user.nick === this.state.nickname && user.password === this.state.password)\n                history.push('/student');\n        });\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:8080/api/users')\n            .then(response => response.json())\n            .then(data=>{\n                console.log(data);\n                this.setState({data});\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"Login\">\n                <form onSubmit={this.handleSubmit}>\n                    <FormGroup controlId=\"text\">\n                        <div>Nickname</div>\n                        <input\n                            type=\"text\"\n                            value={this.state.nickname}\n                            onChange={(text)=>this.setState({nickname: text,})}\n                        />\n                    </FormGroup>\n                    <FormGroup controlId=\"password\">\n                        <div>Password</div>\n                        <FormControl\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                        />\n                    </FormGroup>\n                    <Button\n                        disabled={!this.validateForm()}\n                        type=\"submit\"\n                        on\n                    >\n                        Login\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}